import{t as i}from"./TilesRenderer-BbBk1kdB.js";function o(n){let e=null;return i(n,s=>{if(s.content&&s.content.uri){const[,t]=s.content.uri.split("?");return e=new URLSearchParams(t).get("session"),!0}return!1}),e}class a{constructor({apiToken:e,autoRefreshToken:s=!1}){this.name="GOOGLE_CLOUD_AUTH_PLUGIN",this.apiToken=e,this.autoRefreshToken=s,this.sessionToken=null,this.tiles=null,this._onLoadCallback=null,this._visibilityChangeCallback=null,this._tokenRefreshPromise=null}init(e){this.tiles=e,this._onLoadCallback=({tileSet:s})=>{this.sessionToken=o(s.root),e.removeEventListener("load-tile-set",this._onLoadCallback)},e.addEventListener("load-tile-set",this._onLoadCallback)}preprocessURL(e){return e=new URL(e),/^http/.test(e.protocol)&&(e.searchParams.append("key",this.apiToken),this.sessionToken!==null&&e.searchParams.append("session",this.sessionToken)),e.toString()}dispose(){this.tiles.removeEventListener("load-tile-set",this._onLoadCallback)}async fetchData(e,s){this._tokenRefreshPromise!==null&&(await this._tokenRefreshPromise,e=this.preprocessURL(e));const t=await fetch(e,s);return t.status>=400&&t.status<=499&&this.autoRefreshToken?(await this._refreshToken(s),fetch(this.preprocessURL(e),s)):t}_refreshToken(e){if(this._tokenRefreshPromise===null){const s=new URL(this.tiles.rootURL);s.searchParams.append("key",this.apiToken),this._tokenRefreshPromise=fetch(s,e).then(t=>t.json()).then(t=>{this.sessionToken=o(t.root),this._tokenRefreshPromise=null})}return this._tokenRefreshPromise}}export{a as G};
